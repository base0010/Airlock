#!/usr/bin/env node
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@babel/runtime/helpers/interopRequireDefault"), require("@babel/runtime/regenerator"), require("@babel/runtime/helpers/asyncToGenerator"), require("@babel/runtime/core-js/object/keys"), require("@babel/runtime/helpers/extends"), require("@babel/runtime/helpers/toConsumableArray"), require("@babel/runtime/core-js/json/stringify"), require("@babel/runtime/helpers/defineProperty"), require("@babel/runtime/core-js/promise"), require("@babel/runtime/core-js/number/is-integer"));
	else if(typeof define === 'function' && define.amd)
		define(["@babel/runtime/helpers/interopRequireDefault", "@babel/runtime/regenerator", "@babel/runtime/helpers/asyncToGenerator", "@babel/runtime/core-js/object/keys", "@babel/runtime/helpers/extends", "@babel/runtime/helpers/toConsumableArray", "@babel/runtime/core-js/json/stringify", "@babel/runtime/helpers/defineProperty", "@babel/runtime/core-js/promise", "@babel/runtime/core-js/number/is-integer"], factory);
	else if(typeof exports === 'object')
		exports["@noderize/scripts"] = factory(require("@babel/runtime/helpers/interopRequireDefault"), require("@babel/runtime/regenerator"), require("@babel/runtime/helpers/asyncToGenerator"), require("@babel/runtime/core-js/object/keys"), require("@babel/runtime/helpers/extends"), require("@babel/runtime/helpers/toConsumableArray"), require("@babel/runtime/core-js/json/stringify"), require("@babel/runtime/helpers/defineProperty"), require("@babel/runtime/core-js/promise"), require("@babel/runtime/core-js/number/is-integer"));
	else
		root["@noderize/scripts"] = factory(root["@babel/runtime/helpers/interopRequireDefault"], root["@babel/runtime/regenerator"], root["@babel/runtime/helpers/asyncToGenerator"], root["@babel/runtime/core-js/object/keys"], root["@babel/runtime/helpers/extends"], root["@babel/runtime/helpers/toConsumableArray"], root["@babel/runtime/core-js/json/stringify"], root["@babel/runtime/helpers/defineProperty"], root["@babel/runtime/core-js/promise"], root["@babel/runtime/core-js/number/is-integer"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 24);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.printInfo = printInfo;
exports.printDone = printDone;
exports.printWarn = printWarn;
exports.printDebug = printDebug;
exports.printError = printError;
exports.printLines = printLines;

var _chalk = _interopRequireDefault(__webpack_require__(15));

function printInfo(text) {
  console.log("".concat(_chalk.default.blueBright("[INFO]"), " ").concat(text));
}

function printDone(text) {
  console.log("".concat(_chalk.default.greenBright("[DONE]"), " ").concat(text));
}

function printWarn(text) {
  console.warn("".concat(_chalk.default.yellowBright("[WARN]"), " ").concat(text));
}

function printDebug(text) {
  console.log("".concat(_chalk.default.magentaBright("[DEBUG]"), " ").concat(text));
}

function printError(text) {
  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  console.error("".concat(_chalk.default.redBright("[ERROR]"), " ").concat(text));
  error && console.error(error);
}

function printLines(printMethod, lines) {
  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
  lines.split("\n").forEach(function (line) {
    return printMethod("".concat(prefix).concat(line));
  });
}

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("fs-extra");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBinPath = getBinPath;
exports.resolveApp = exports.appDirectory = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

var _path = __webpack_require__(7);

var appDirectory = _fsExtra.default.realpathSync(process.cwd());

exports.appDirectory = appDirectory;

var resolveApp = function resolveApp() {
  for (var _len = arguments.length, relativePath = new Array(_len), _key = 0; _key < _len; _key++) {
    relativePath[_key] = arguments[_key];
  }

  return _path.resolve.apply(void 0, [appDirectory].concat(relativePath));
};

exports.resolveApp = resolveApp;

function getBinPath(_x) {
  return _getBinPath.apply(this, arguments);
}

function _getBinPath() {
  _getBinPath = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(bin) {
    var local, global;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            local = (0, _path.resolve)(__dirname, "..", // scripts
            "node_modules", ".bin", bin);
            _context.next = 3;
            return _fsExtra.default.exists(local);

          case 3:
            if (!_context.sent) {
              _context.next = 5;
              break;
            }

            return _context.abrupt("return", local);

          case 5:
            global = (0, _path.resolve)(__dirname, "..", // scripts
            "..", // @noderize
            "..", // node_modules
            ".bin", bin);
            _context.next = 8;
            return _fsExtra.default.exists(global);

          case 8:
            if (!_context.sent) {
              _context.next = 10;
              break;
            }

            return _context.abrupt("return", global);

          case 10:
            return _context.abrupt("return", null);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
  return _getBinPath.apply(this, arguments);
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOptions = getOptions;

var _stringify = _interopRequireDefault(__webpack_require__(11));

var _isInteger = _interopRequireDefault(__webpack_require__(17));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));

var _keys = _interopRequireDefault(__webpack_require__(8));

var _extends3 = _interopRequireDefault(__webpack_require__(9));

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

var _path = __webpack_require__(5);

var _path2 = _interopRequireDefault(__webpack_require__(7));

var _lodash = _interopRequireDefault(__webpack_require__(13));

var _minimist = _interopRequireDefault(__webpack_require__(18));

var _cosmiconfig = _interopRequireDefault(__webpack_require__(14));

var _print = __webpack_require__(1);

function run() {
  var runners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var value = arguments.length > 1 ? arguments[1] : undefined;
  var extra = arguments.length > 2 ? arguments[2] : undefined;

  if (!Array.isArray(runners)) {
    runners = [runners];
  }

  runners.forEach(function (runner) {
    value = runner(value, extra);
  });
  return value;
}

function getOptions(rawArgs) {
  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var childPackage = _fsExtra.default.readJsonSync((0, _path.resolveApp)("package.json"));

  var types = {
    srcDirectory: {
      type: String,
      default: "src"
    },
    distDirectory: {
      type: String,
      default: "dist"
    },
    languages: {
      type: Array,
      subtype: String,
      default: ["javascript"]
    },
    bundles: {
      type: Array,
      subtype: Object,
      default: function _default(_ref) {
        var languages = _ref.options.languages;
        return [{
          entry: ["index." + (languages.length === 1 && languages[0] === "typescript" ? "ts" : "js")],
          output: "index.js"
        }];
      },
      run: function run(bundles) {
        return bundles.map(function (bundle) {
          return (0, _extends3.default)({}, bundle, {
            entry: Array.isArray(bundle.entry) ? bundle.entry : [bundle.entry]
          });
        });
      }
    },
    startFile: {
      type: String,
      default: function _default(_ref2) {
        var options = _ref2.options,
            childPackage = _ref2.childPackage;
        return (0, _path.resolveApp)(childPackage.main ? "" : options.distDirectory, childPackage.main || options.bundles[0].output);
      },
      run: function run(startFile, _ref3) {
        var options = _ref3.options;
        return (0, _path.resolveApp)(options.distDirectory, startFile);
      }
    },
    shebang: {
      type: Boolean,
      default: function _default(_ref4) {
        var childPackage = _ref4.childPackage;
        return childPackage.bin !== undefined;
      }
    },
    sourcemap: {
      type: Boolean,
      default: true
    },
    runOnWatch: {
      type: Boolean,
      default: true
    },
    minify: {
      type: Boolean,
      default: false
    },
    includeExternal: {
      type: Boolean,
      default: false
    },
    name: {
      type: String,
      default: function _default(_ref5) {
        var childPackage = _ref5.childPackage;
        return childPackage.name;
      }
    },
    buildThreads: {
      type: Number,
      integer: true,
      min: 1,
      default: 3
    },
    static: {
      type: Object,
      default: {}
    },
    globals: {
      type: Object,
      default: {}
    },
    targets: {
      type: Object,
      default: {
        node: true
      }
    },
    debug: {
      type: Boolean,
      default: false
    },
    babel: {
      type: Object,
      default: {}
    },
    target: {
      type: String,
      default: "node",
      choices: ["node", "web"]
    },
    runtime: {
      type: String,
      default: function _default(_ref6) {
        var childPackage = _ref6.childPackage;
        return (0, _keys.default)(childPackage.dependencies || {}).includes("@noderize/runtime") ? "noderize" : "include";
      },
      choices: ["noderize", "include", "polyfill", "none"]
    },
    env: {
      type: Object,
      default: {
        production: {
          sourcemap: false,
          targets: {}
        },
        test: {},
        development: {}
      },
      merge: true,
      notArg: true
    }
  };
  var boleans = (0, _keys.default)(types).filter(function (type) {
    return types[type].type === Boolean;
  }); // Parse args

  var args = (0, _minimist.default)(rawArgs || [], {
    boolean: boleans,
    string: (0, _keys.default)(types).filter(function (type) {
      return types[type].type === String || types[type].type === Object;
    }),
    default: boleans.reduce(function (total, bool) {
      return (0, _extends3.default)({}, total, (0, _defineProperty2.default)({}, bool, null));
    }, {})
  });
  var options = {};

  try {
    // Load from "noderize" key in package.json, .noderizerc, or noderize.config.js
    var results = (0, _cosmiconfig.default)("noderize", {
      sync: true
    }).load();

    if (results) {
      var configOptions = results.config;
      (0, _keys.default)(configOptions).forEach(function (configOptionKey) {
        if (types[configOptionKey] !== undefined) {
          var type = types[configOptionKey];
          var value = configOptions[configOptionKey];

          if (type.type === Array && !Array.isArray(value)) {
            value = [value];
          }

          value = run(type.run, value, {
            options: options
          });
          options[configOptionKey] = value;
        } else {
          (0, _print.printWarn)("Config key '".concat(configOptionKey, "' doesn't do anything."));
        }
      });
    }
  } catch (error) {
    (0, _print.printError)("Could not read Noderize configuration.", error);
  }

  function parseArgType(arg, type, value) {
    switch (type.type) {
      case Boolean:
      case String:
        return type.type(value);

      case Number:
        var number = parseFloat(value);

        if (isNaN(number)) {
          (0, _print.printError)("Argument '".concat(arg, "' is not a number."));
          break;
        } else {
          return number;
        }

      case Object:
        try {
          return JSON.parse(value);
        } catch (error) {
          (0, _print.printError)("Could not parse JSON for argument '".concat(arg, "'."), error.message);
          break;
        }

      case Array:
        if (!Array.isArray(value)) {
          value = [value];
        }

        return value.map(function (value) {
          return parseArgType(arg, {
            type: type.subtype
          }, value);
        });
    }
  }

  (0, _keys.default)(args).filter(function (arg) {
    return (0, _keys.default)(types).includes(arg);
  }).filter(function (arg) {
    return !types[arg].notArg;
  }).forEach(function (arg) {
    var type = types[arg];
    var argValue = args[arg];

    if (argValue !== null) {
      var value = parseArgType(arg, type, argValue);

      if (value !== undefined) {
        value = run(type.run, value, {
          options: options
        });
        options[arg] = value;
      }
    }
  });
  (0, _keys.default)(types).forEach(function (typeName) {
    var value = options[typeName];
    var type = types[typeName];

    if (value === undefined || type.merge) {
      var defaultValue = type.default;

      if (defaultValue instanceof Function) {
        defaultValue = defaultValue({
          options: options,
          childPackage: childPackage
        });
      }

      if (type.merge) {
        options[typeName] = (0, _lodash.default)({}, defaultValue, options[typeName]);
      } else {
        options[typeName] = defaultValue;
      }
    }
  }); // Checks

  (0, _keys.default)(options).forEach(function (option) {
    var value = options[option];
    var type = types[option];

    if (type.type === Number) {
      if (type.integer && !(0, _isInteger.default)(value)) {
        (0, _print.printError)("Option '".concat(option, "' is not an integer."));
      }

      if (type.min !== undefined && value < type.min) {
        (0, _print.printError)("Option '".concat(option, "' is under minimum (").concat(type.min, ")."));
      }

      if (type.max !== undefined && value > type.max) {
        (0, _print.printError)("Option '".concat(option, "' is over maximum (").concat(type.max, ")."));
      }
    }

    if (type.choices !== undefined) {
      if (!type.choices.includes(value)) {
        (0, _print.printError)("Invalid choice for ".concat(option, ": '").concat(value, "'."));
      }
    }
  });
  var languageList = options.languages;
  options.languages = {
    javascript: false,
    typescript: false
  };
  languageList.forEach(function (language) {
    if (options.languages[language] !== undefined) {
      options.languages[language] = true;
    } else {
      (0, _print.printWarn)("Unknown language '".concat(language, "'"));
    }
  }); //
  //
  // if (args.babelPlugins !== undefined) {
  // 	if (!Array.isArray(args.babelPlugins)) {
  // 		args.babelPlugins = [args.babelPlugins];
  // 	}
  // 	options.babel.plugins = args.babelPlugins.map(plugin => {
  // 		try {
  // 			return JSON.parse(plugin);
  // 		} catch (error) {
  // 			printWarn(`Could not parse babel plugin.`);
  // 		}
  // 	});
  // }
  //
  // if (args.babelPresets !== undefined) {
  // 	if (!Array.isArray(args.babelPresets)) {
  // 		args.babelPresets = [args.babelPresets];
  // 	}
  // 	options.babel.presets = args.babelPresets.map(preset => {
  // 		try {
  // 			return JSON.parse(preset);
  // 		} catch (error) {
  // 			printWarn(`Could not parse babel preset.`);
  // 		}
  // 	});
  // }
  //
  // boleans.forEach(bool => {
  // 	if (args[bool] !== null) {
  // 		options[bool] = !!args[bool];
  // 	}
  // });
  //
  // strings.forEach(string => {
  // 	if (args[string] !== undefined) {
  // 		options[string] = args[string];
  // 	}
  // });
  //
  // if (args.languages !== undefined) {
  // 	options.languages = args.languages;
  // }
  //
  // // Parse languages to list then object
  // if (options.languages === undefined) {
  // 	// No loaders set, use babel
  // 	options.languages = ["javascript"];
  // } else if (!Array.isArray(options.languages)) {
  // 	options.languages = [options.languages]; // Support single string
  // }
  //
  // const languageList = options.languages;
  //
  // options.languages = { javascript: false, typescript: false };
  // languageList.forEach(language => {
  // 	if (options.languages[language] !== undefined) {
  // 		options.languages[language] = true;
  // 	} else {
  // 		printWarn(`Unknown language '${language}'`);
  // 	}
  // });
  //
  // if (args.bundles !== undefined) {
  // 	if (!Array.isArray(args.bundles)) {
  // 		args.bundles = [args.bundles];
  // 	}
  //
  // 	options.bundles = args.bundles
  // 		.map(bundle => {
  // 			try {
  // 				return JSON.parse(bundle);
  // 			} catch (error) {
  // 				printWarn(`Could not parse bundle.`);
  // 				return false;
  // 			}
  // 		})
  // 		.filter(Boolean);
  //
  // 	// If no bundles were found, reset
  // 	if (options.bundles.length === 0) {
  // 		options.bundles = undefined;
  // 	}
  // }
  //
  // // Bundles
  // if (options.bundles === undefined) {
  // 	let entry = "index.js";
  // 	if (languageList.length === 1 && languageList[0] === "typescript") {
  // 		entry = "index.ts";
  // 	}
  //
  // 	options.bundles = [{ entry, output: "index.js" }];
  // }
  //
  // options.bundles = options.bundles.map(bundle => {
  // 	const output = merge({}, bundle);
  // 	if (!Array.isArray(output.entry)) {
  // 		output.entry = [output.entry];
  // 	}
  // 	if (output.polyfill === undefined) {
  // 		output.polyfill = true;
  // 	}
  //
  // 	return output;
  // });
  //
  //
  // // Check if bundle entries exist
  // // Iterate bundles
  // options.bundles.map(bundle => {
  // 	// Iterate each entry of bundle (excluding externals starting with ~)
  // 	bundle.entry.filter(entry => !entry.startsWith("~")).forEach(entry => {
  // 		// Check & error
  // 		const exists = fs.existsSync(resolveApp("src", entry));
  // 		if (!exists) {
  // 			printError(`Could not find bundle entry at src/${entry}`);
  // 		}
  // 	});
  // });
  //
  // if (options.startFile === undefined) {
  // 	if (childPackage.main !== undefined) {
  // 		options.startFile = childPackage.main;
  // 	} else {
  // 		options.startFile = path.join(
  // 			"dist",
  // 			Object.values(options.bundles)[0].output
  // 		);
  // 	}
  // }
  //

  options.currentEnv = env || args.env || process.env.NODE_ENV || "development"; // Replace with env value

  if (options.currentEnv) {
    var envConfig = options.env[options.currentEnv];

    if (envConfig === undefined) {
      (0, _print.printWarn)("Could not find '".concat(options.currentEnv, "' environment."));
    } else {
      (0, _keys.default)(envConfig).forEach(function (envKey) {
        options[envKey] = envConfig[envKey];
      });
    }
  }

  if (options.debug || args.showConfig) {
    (0, _print.printLines)(_print.printDebug, (0, _stringify.default)(options, null, "\t"), "\t");
  }

  if (args.showConfig) {
    process.exit(0);
  }

  return (0, _extends3.default)({}, options, {
    args: args
  });
}

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("lodash.merge");

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("cosmiconfig");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("chalk");

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_16__;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_17__;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("minimist");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(10));

var _default = function _default() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      targets = _ref.targets,
      _ref$babel = _ref.babel,
      _ref$babel$presets = _ref$babel.presets,
      presets = _ref$babel$presets === void 0 ? [] : _ref$babel$presets,
      _ref$babel$plugins = _ref$babel.plugins,
      plugins = _ref$babel$plugins === void 0 ? [] : _ref$babel$plugins,
      _ref$runtime = _ref.runtime,
      runtime = _ref$runtime === void 0 ? "include" : _ref$runtime;

  return {
    presets: [["@babel/preset-env", {
      targets: targets
    }], "@babel/preset-stage-2", "@babel/preset-flow"].concat((0, _toConsumableArray2.default)(presets)),
    plugins: ["@babel/plugin-proposal-decorators", (runtime === "noderize" || runtime === "include") && "@babel/plugin-transform-runtime"].concat((0, _toConsumableArray2.default)(plugins)).filter(Boolean)
  };
};

exports.default = _default;

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("cross-spawn");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCompiler = getCompiler;
exports.printStats = printStats;

var _extends2 = _interopRequireDefault(__webpack_require__(9));

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _promise = _interopRequireDefault(__webpack_require__(16));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _createBabelConfig = _interopRequireDefault(__webpack_require__(19));

var _path = _interopRequireDefault(__webpack_require__(7));

var _supportsColor = _interopRequireDefault(__webpack_require__(27));

var _path2 = __webpack_require__(5);

var _webpack = _interopRequireDefault(__webpack_require__(28));

var _uglifyjsWebpackPlugin = _interopRequireDefault(__webpack_require__(29));

var _webpackNodeExternals = _interopRequireDefault(__webpack_require__(30));

var _forkTsCheckerWebpackPlugin = _interopRequireDefault(__webpack_require__(31));

var _happypack = _interopRequireDefault(__webpack_require__(32));

var _webpackBypassRequire = _interopRequireDefault(__webpack_require__(33));

var _print = __webpack_require__(1);

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

function getCompiler(_x) {
  return _getCompiler.apply(this, arguments);
}

function _getCompiler() {
  _getCompiler = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee3(options) {
    var tsconfig, happyThreadPool, _options$languages, javascript, typescript, bundles, exclude, config;

    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            tsconfig = _path.default.resolve(__dirname, "tsconfig.json");
            happyThreadPool = _happypack.default.ThreadPool({
              size: options.buildThreads
            });
            _options$languages = options.languages, javascript = _options$languages.javascript, typescript = _options$languages.typescript;
            bundles = {};
            _context3.next = 6;
            return _promise.default.all(options.bundles.map(
            /*#__PURE__*/
            function () {
              var _ref = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee2(bundle) {
                var entries;
                return _regenerator.default.wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        _context2.next = 2;
                        return _promise.default.all(bundle.entry.map(
                        /*#__PURE__*/
                        function () {
                          var _ref2 = (0, _asyncToGenerator2.default)(
                          /*#__PURE__*/
                          _regenerator.default.mark(function _callee(entry) {
                            var entryPath;
                            return _regenerator.default.wrap(function _callee$(_context) {
                              while (1) {
                                switch (_context.prev = _context.next) {
                                  case 0:
                                    if (!entry.startsWith("~")) {
                                      _context.next = 10;
                                      break;
                                    }

                                    _context.prev = 1;
                                    return _context.abrupt("return", _webpackBypassRequire.default.resolve(entry.slice(1)));

                                  case 5:
                                    _context.prev = 5;
                                    _context.t0 = _context["catch"](1);
                                    (0, _print.printError)("Could not find external entry '".concat(entry.slice(1), "'."));

                                  case 8:
                                    _context.next = 18;
                                    break;

                                  case 10:
                                    entryPath = (0, _path2.resolveApp)(options.srcDirectory, entry);
                                    _context.next = 13;
                                    return _fsExtra.default.exists(entryPath);

                                  case 13:
                                    if (_context.sent) {
                                      _context.next = 17;
                                      break;
                                    }

                                    (0, _print.printError)("Could not find entry '".concat(entry, "' (").concat(entryPath, ")."));
                                    _context.next = 18;
                                    break;

                                  case 17:
                                    return _context.abrupt("return", entryPath);

                                  case 18:
                                  case "end":
                                    return _context.stop();
                                }
                              }
                            }, _callee, this, [[1, 5]]);
                          }));

                          return function (_x3) {
                            return _ref2.apply(this, arguments);
                          };
                        }()));

                      case 2:
                        entries = _context2.sent;

                        // Add polyfill
                        if (options.runtime === "polyfill") {
                          entries.unshift(_webpackBypassRequire.default.resolve("@babel/polyfill"));
                        }

                        bundles[bundle.output] = entries;

                      case 5:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2, this);
              }));

              return function (_x2) {
                return _ref.apply(this, arguments);
              };
            }()));

          case 6:
            exclude = [/node_modules/, /\.test\./, /\.spec\.]/, /__tests__/]; // Create webpack config

            config = {
              context: _path2.appDirectory,
              entry: bundles,
              output: {
                path: (0, _path2.resolveApp)(options.distDirectory),
                filename: "[name]",
                library: options.name,
                libraryTarget: "umd"
              },
              module: {
                rules: [javascript && {
                  test: /\.js$/,
                  exclude: exclude,
                  use: "happypack/loader?id=javascript"
                }, typescript && {
                  test: /\.ts$/,
                  exclude: exclude,
                  use: "happypack/loader?id=typescript"
                }].filter(Boolean)
              },
              resolve: {
                extensions: [javascript && ".js", typescript && ".ts"].filter(Boolean)
              },
              plugins: [javascript && new _happypack.default({
                id: "javascript",
                threadPool: happyThreadPool,
                loaders: [{
                  loader: _webpackBypassRequire.default.resolve("babel-loader"),
                  options: (0, _extends2.default)({}, (0, _createBabelConfig.default)(options), {
                    cacheDirectory: true
                  })
                }],
                verbose: options.debug
              }), typescript && new _happypack.default({
                id: "typescript",
                threadPool: happyThreadPool,
                loaders: [{
                  loader: _webpackBypassRequire.default.resolve("ts-loader"),
                  options: {
                    context: _path2.appDirectory,
                    configFile: tsconfig,
                    happyPackMode: true
                  }
                }],
                verbose: options.debug
              }), typescript && new _forkTsCheckerWebpackPlugin.default({
                checkSyntacticErrors: true,
                tsconfig: tsconfig
              }), options.shebang && new _webpack.default.BannerPlugin({
                banner: "#!/usr/bin/env node",
                raw: true
              }), options.globals && new _webpack.default.ProvidePlugin(options.globals), options.minify && new _uglifyjsWebpackPlugin.default(), options.sourcemap && new _webpack.default.SourceMapDevToolPlugin({
                filename: "[name].map"
              })].filter(Boolean),
              target: options.target,
              node: options.target === "node" ? false : undefined,
              externals: [!options.includeExternal && (0, _webpackNodeExternals.default)({
                modulesFromFile: true
              }), options.runtime === "noderize" && /@babel\/runtime/].filter(Boolean)
            };
            return _context3.abrupt("return", (0, _webpack.default)(config));

          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));
  return _getCompiler.apply(this, arguments);
}

function printStats(stats, options) {
  console.log(stats.toString({
    colors: _supportsColor.default.stdout,
    modules: options.debug,
    maxModules: Infinity,
    excludeAssets: options.debug ? undefined : /\.map$/,
    version: options.debug,
    warnins: options.debug
  }));
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyAll = copyAll;
exports.copyFile = copyFile;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _keys = _interopRequireDefault(__webpack_require__(8));

var _promise = _interopRequireDefault(__webpack_require__(16));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _print = __webpack_require__(1);

var _path = __webpack_require__(5);

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

function copyAll(_x, _x2) {
  return _copyAll.apply(this, arguments);
}

function _copyAll() {
  _copyAll = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee2(files, options) {
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _promise.default.all((0, _keys.default)(files).map(
            /*#__PURE__*/
            function () {
              var _ref = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee(source) {
                var destination;
                return _regenerator.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        destination = files[source];
                        _context.next = 3;
                        return copyFile(source, destination, options);

                      case 3:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, this);
              }));

              return function (_x6) {
                return _ref.apply(this, arguments);
              };
            }()));

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));
  return _copyAll.apply(this, arguments);
}

function copyFile(_x3, _x4, _x5) {
  return _copyFile.apply(this, arguments);
}

function _copyFile() {
  _copyFile = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee3(source, destination, options) {
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            _context3.next = 3;
            return _fsExtra.default.copy((0, _path.resolveApp)(options.srcDirectory, source), (0, _path.resolveApp)(options.distDirectory, destination));

          case 3:
            (0, _print.printInfo)("Copied ".concat(options.srcDirectory, "/").concat(source, " to ").concat(options.distDirectory, "/").concat(destination, "!"));
            _context3.next = 9;
            break;

          case 6:
            _context3.prev = 6;
            _context3.t0 = _context3["catch"](0);

            if (_context3.t0.code === "ENOENT") {
              (0, _print.printError)("Could not find ".concat(options.srcDirectory, "/").concat(source, "."));
            } else {
              (0, _print.printError)("Error copying ".concat(options.srcDirectory, "/").concat(source, " to ").concat(options.distDirectory, "/").concat(destination, "."), _context3.t0);
            }

          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this, [[0, 6]]);
  }));
  return _copyFile.apply(this, arguments);
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.start = start;
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(10));

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _crossSpawn = _interopRequireDefault(__webpack_require__(20));

var _options = __webpack_require__(6);

var _path = __webpack_require__(5);

var _print = __webpack_require__(1);

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(args) {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return start((0, _options.getOptions)(args));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;

function start(_x2) {
  return _start.apply(this, arguments);
}

function _start() {
  _start = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee2(options) {
    var nodePath,
        startFileExists,
        child,
        _args2 = arguments;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            nodePath = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : process.argv[0];
            (0, _print.printInfo)("Starting...");
            console.log(); // Padding

            _context2.next = 5;
            return _fsExtra.default.exists(options.startFile);

          case 5:
            startFileExists = _context2.sent;

            if (startFileExists) {
              _context2.next = 9;
              break;
            }

            (0, _print.printError)("Start file does not exists.");
            return _context2.abrupt("return");

          case 9:
            child = (0, _crossSpawn.default)(nodePath, [options.startFile].concat((0, _toConsumableArray2.default)(options.args._)), {
              execArgv: ["-r", "source-map-support/register"],
              cwd: _path.appDirectory,
              stdio: "inherit"
            });
            child.on("exit", function (code, signal) {
              if (code !== null) {
                console.log(); // Padding

                if (code === 0) {
                  (0, _print.printInfo)("Exited gracefully!");
                } else {
                  (0, _print.printWarn)("Exited with code ".concat(code, " ").concat(signal ? "and signal ".concat(signal) : ""));
                }
              }
            });
            return _context2.abrupt("return", child);

          case 12:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));
  return _start.apply(this, arguments);
}

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(25);


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

var _keys = _interopRequireDefault(__webpack_require__(8));

var _print = __webpack_require__(1);

var _build = _interopRequireDefault(__webpack_require__(26));

var _start = _interopRequireDefault(__webpack_require__(23));

var _test = _interopRequireDefault(__webpack_require__(34));

var _watch = _interopRequireDefault(__webpack_require__(36));

var _format = _interopRequireDefault(__webpack_require__(39));

var _clean = _interopRequireDefault(__webpack_require__(40));

var commands = {
  build: _build.default,
  test: _test.default,
  watch: _watch.default,
  format: _format.default,
  start: _start.default,
  clean: _clean.default
};
var args = process.argv.slice(2);
var script = args.shift();

if (!(0, _keys.default)(commands).includes(script)) {
  (0, _print.printWarn)("Unknown script.");
  process.exit(1);
} else {
  commands[script](args, process.argv);
}

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _keys = _interopRequireDefault(__webpack_require__(8));

var _promise = _interopRequireDefault(__webpack_require__(16));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _options = __webpack_require__(6);

var _print = __webpack_require__(1);

var _webpack = __webpack_require__(21);

var _copy = __webpack_require__(22);

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(args) {
    var options, compiler, stats;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            (0, _print.printInfo)("Building...");
            console.log();
            options = (0, _options.getOptions)(args);
            _context.next = 5;
            return (0, _webpack.getCompiler)(options);

          case 5:
            compiler = _context.sent;
            _context.prev = 6;
            _context.next = 9;
            return new _promise.default(function (resolve, reject) {
              compiler.run(function (err, stats) {
                if (err) {
                  reject(err);
                } else {
                  resolve(stats);
                }
              });
            });

          case 9:
            stats = _context.sent;
            (0, _webpack.printStats)(stats, options);
            console.log(); // Copy

            if (!((0, _keys.default)(options.static).length > 0)) {
              _context.next = 16;
              break;
            }

            _context.next = 15;
            return (0, _copy.copyAll)(options.static, options);

          case 15:
            console.log();

          case 16:
            (0, _print.printDone)("Done building!");
            _context.next = 22;
            break;

          case 19:
            _context.prev = 19;
            _context.t0 = _context["catch"](6);
            (0, _print.printError)("Error building.", _context.t0);

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[6, 19]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("supports-color");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("webpack");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("uglifyjs-webpack-plugin");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("webpack-node-externals");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("fork-ts-checker-webpack-plugin");

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = require("happypack");

/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = require("webpack-bypass-require");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _stringify = _interopRequireDefault(__webpack_require__(11));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(10));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _path = _interopRequireDefault(__webpack_require__(7));

var _path2 = __webpack_require__(5);

var _child_process = __webpack_require__(35);

var _crossSpawn = _interopRequireDefault(__webpack_require__(20));

var _options = __webpack_require__(6);

var _cosmiconfig = _interopRequireDefault(__webpack_require__(14));

var _lodash = _interopRequireDefault(__webpack_require__(13));

var _print = __webpack_require__(1);

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(args, fullArgs) {
    var options, jestConfig, results, isInGit, extensions, config, jestPath;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            (0, _print.printInfo)("Testing...");
            options = (0, _options.getOptions)(null, "test");
            jestConfig = {};
            _context.prev = 3;
            _context.next = 6;
            return (0, _cosmiconfig.default)("jest").load();

          case 6:
            results = _context.sent;

            if (results) {
              jestConfig = results.config;
            }

            _context.next = 13;
            break;

          case 10:
            _context.prev = 10;
            _context.t0 = _context["catch"](3);
            (0, _print.printError)("Could not read Jest configuration.", _context.t0);

          case 13:
            try {
              (0, _child_process.execSync)("git rev-parse --is-inside-work-tree 2>/dev/null", {
                encoding: "utf8"
              });
              isInGit = true;
            } catch (error) {
              isInGit = false;
            } // Watch by default (when not in CI)


            if (!(process.env.CI || args.includes("--ci") || args.includes("--watchAll") || args.includes("--watch") || args.includes("--coverage"))) {
              args.push(isInGit ? "--watch" : "--watchAll");
            }

            extensions = ["js", // Must use js for Jest itself
            options.languages.typescript && "ts"].filter(Boolean);
            config = (0, _lodash.default)({
              rootDir: _path2.appDirectory,
              roots: ["<rootDir>/".concat(options.srcDirectory)],
              transform: {},
              setupFiles: [],
              moduleFileExtensions: (0, _toConsumableArray2.default)(extensions).concat(["json"]),
              testRegex: "(.*__tests__.*|.*\\.(test|spec))\\.(".concat(extensions.join("|"), ")$")
            }, jestConfig); // Force add transformer

            config.transform["^.+\\.(".concat(extensions.join("|"), ")$")] = _path.default.resolve(__dirname, "jestTransformer.js");
            args.push("--config", (0, _stringify.default)(config));
            _context.next = 21;
            return (0, _path2.getBinPath)("jest");

          case 21:
            jestPath = _context.sent;
            // Run Jest
            (0, _crossSpawn.default)(fullArgs[0], [jestPath].concat((0, _toConsumableArray2.default)(args)), {
              cwd: _path2.appDirectory,
              stdio: "inherit"
            });

          case 23:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[3, 10]]);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;

/***/ }),
/* 35 */
/***/ (function(module, exports) {

module.exports = require("child_process");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(12));

var _extends3 = _interopRequireDefault(__webpack_require__(9));

var _keys = _interopRequireDefault(__webpack_require__(8));

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _options = __webpack_require__(6);

var _start = __webpack_require__(23);

var _print = __webpack_require__(1);

var _chokidar = _interopRequireDefault(__webpack_require__(37));

var _webpack = __webpack_require__(21);

var _path = __webpack_require__(5);

var _copy = __webpack_require__(22);

var _pathIsInside = _interopRequireDefault(__webpack_require__(38));

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee4(args) {
    var options, compiler, child, errors, childRunning, files, fileChange, staticWatcher;
    return _regenerator.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            (0, _print.printInfo)("Watching...");
            options = (0, _options.getOptions)(args);
            _context4.next = 4;
            return (0, _webpack.getCompiler)(options);

          case 4:
            compiler = _context4.sent;
            errors = false;
            childRunning = false;
            compiler.watch({
              ignored: /node_modules/
            },
            /*#__PURE__*/
            function () {
              var _ref2 = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee(err, stats) {
                return _regenerator.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        console.log();
                        (0, _print.printInfo)("Building...");
                        console.log();
                        (0, _webpack.printStats)(stats, options);
                        console.log();

                        if (!options.runOnWatch) {
                          _context.next = 10;
                          break;
                        }

                        if (child) {
                          child.kill();
                        }

                        _context.next = 9;
                        return (0, _start.start)(options);

                      case 9:
                        child = _context.sent;

                      case 10:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, this);
              }));

              return function (_x2, _x3) {
                return _ref2.apply(this, arguments);
              };
            }()); // Get real file paths

            files = (0, _keys.default)(options.static).reduce(function (files, source) {
              return (0, _extends3.default)({}, files, (0, _defineProperty2.default)({}, (0, _path.resolveApp)(options.srcDirectory, source), {
                source: source,
                destination: options.static[source]
              }));
            }, {});

            fileChange = function fileChange(path) {
              setTimeout(
              /*#__PURE__*/
              (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee2() {
                var exists, file;
                return _regenerator.default.wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        _context2.next = 2;
                        return _fsExtra.default.exists(path);

                      case 2:
                        exists = _context2.sent;

                        if (!exists) {
                          _context2.next = 8;
                          break;
                        }

                        if (files[path]) {
                          // Watching directly the file
                          file = files[path];
                        } else {
                          // File is in subdirectory that is being watched
                          file = files[(0, _keys.default)(files).find(function (fullFilePath) {
                            return (0, _pathIsInside.default)(path, fullFilePath);
                          })];
                        }

                        if (!file) {
                          _context2.next = 8;
                          break;
                        }

                        _context2.next = 8;
                        return (0, _copy.copyFile)(file.source, file.destination, options);

                      case 8:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2, this);
              })), 100);
            };

            staticWatcher = _chokidar.default.watch((0, _keys.default)(files), {
              ignoreInitial: true,
              disableGlobbing: true
            });
            staticWatcher.on("ready",
            /*#__PURE__*/
            (0, _asyncToGenerator2.default)(
            /*#__PURE__*/
            _regenerator.default.mark(function _callee3() {
              return _regenerator.default.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      _context3.next = 2;
                      return (0, _copy.copyAll)(options.static, options);

                    case 2:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3, this);
            })));
            staticWatcher.on("add", fileChange);
            staticWatcher.on("addDir", fileChange);
            staticWatcher.on("change", fileChange);
            process.on("exit", function () {
              if (child) {
                child.kill();
              }
            });

          case 16:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = require("chokidar");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = require("path-is-inside");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(10));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _path = _interopRequireDefault(__webpack_require__(7));

var _options = __webpack_require__(6);

var _path2 = __webpack_require__(5);

var _crossSpawn = _interopRequireDefault(__webpack_require__(20));

var _print = __webpack_require__(1);

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(args, fullArgs) {
    var options, srcPrefixed, files, prettierPath, child;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            (0, _print.printInfo)("Formatting...");
            options = (0, _options.getOptions)(null);
            srcPrefixed = ["**/*.ts", "**/*.js", "**/*.json"].map(function (file) {
              return _path.default.join(options.srcDirectory, file);
            });
            files = (0, _toConsumableArray2.default)(srcPrefixed).concat(["package.json"]);
            _context.next = 6;
            return (0, _path2.getBinPath)("prettier");

          case 6:
            prettierPath = _context.sent;
            child = (0, _crossSpawn.default)(fullArgs[0], [prettierPath, "--write"].concat((0, _toConsumableArray2.default)(files), (0, _toConsumableArray2.default)(args)), {
              cwd: _path2.appDirectory,
              stdio: "inherit"
            });
            child.on("exit", function (code) {
              var message = "Done formatting!";

              if (code === 0) {
                (0, _print.printDone)(message);
              } else {
                (0, _print.printWarn)(message);
              }
            });

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(0);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(2));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(3));

var _options = __webpack_require__(6);

var _print = __webpack_require__(1);

var _path = __webpack_require__(5);

var _fsExtra = _interopRequireDefault(__webpack_require__(4));

var _default =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(args) {
    var options;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            (0, _print.printInfo)("Cleaning...");
            options = (0, _options.getOptions)(null);
            _context.prev = 2;
            _context.next = 5;
            return _fsExtra.default.remove((0, _path.resolveApp)(options.distDirectory));

          case 5:
            (0, _print.printDone)("Done cleaning!");
            _context.next = 11;
            break;

          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](2);
            (0, _print.printError)("Error deleting files.", _context.t0);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[2, 8]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;

/***/ })
/******/ ]);
});